#1.我们实现这样的目的：输入一个十进制数，以字符串形式输出相应的二进制、十六进制数

#2.实现思路：在存储单元中，数据实际上是以二进制形式存储的。
  所以说我们可以通过循环右移指令实现对二进制串的逐字读取，然后将读取到的单个数据
  转为所对应的ASCII码并存贮至一个字符数组的地址中。
  对于十六进制，每一个位代表3个二进制位
  
#3.实现代码1：
#include<stdio.h>

int main()
{
	char AC;
	char binaryC[9];
	printf("Enter a char:");
	scanf("%c",&AC);
	_asm{
		mov ebx,0
		mov ecx,7                     //ASCII码一共8位
		lea edi,binaryC               //导出到这个地址
		add edi,7
		mov byte ptr [edi+1],0        //设置字符串结束标志

		mov al,AC
	next:
		shr al,1                      //循环右移一位
		mov byte ptr[edi],30H         //将转出的数据转为ASCII码形式
		jnc looping                   
		mov byte ptr[edi],31H
		inc ebx
	looping:
		dec edi
		loop next
		mov al,AC
		mov byte ptr[edi],30H
		test ebx,1
		jnz display
		mov byte ptr [edi],31H
		mov AC,al
	}
display:
	printf("%s,%c \n",binaryC,AC);
	return 0;
}
